c
query.blank?
query
query = VmMineraDados.search_all(params)
c
str.include?(': ')
str
c
str.blank?
str.blanck?
str
exit
c
s
c
s
c
string.split(', ')
string
c
fil["uf"]
fil = JSON.parse(filter)
JSON.parse(filter)
filter
filter.split(',')
filter
filter.split(',')
filter.json(',')
filter.split(',')
filter.to_json
filter.to_
filter.to_json
filter
c
historic.filters
historic.name_history
historic.date_history
historic
c
history_query
c
history
exit
line[1]
c
line[2]
line[1]
line[0]
line
c
code
c
query.where(start_date_activity: "20230201")
query.where(start_date_activity: "20230101")
query.where(start_date_activity: "20240101")
query.where(start_date_activity: date_initial)
query.where(start_date_activity: date_ini)
date_initial..date_end
c
a.count
a = query.where("primary_cnae_code in (#{cnaes_codes})")
c
a = query.where('primary_cnae_code in ?', "#{params[:primary_cnae_code].join(', ')}")
a = query.where('primary_cnae_code in ?', "#{params[:primary_cnae_code].split(', ')}")
a = query.where('primary_cnae_code in ?', "#{params[:primary_cnae_code].split(',')}")
a = query.where('primary_cnae_code in ?', "#{params[:primary_cnae_code].join(',').split(',')}")
a.count
a = query.where('primary_cnae_code in ?', "#{params[:primary_cnae_code].split(',')}")
a.count
a = query.where('primary_cnae_code in ?', "#{params[:primary_cnae_code].split(',').join(',')}")
a.count
a = query.where('primary_cnae_code in = ?', "#{params[:primary_cnae_code].split(',').join(',')}")
query.where('primary_cnae_code in = ?', "#{params[:primary_cnae_code].split(',').join(',')}")
query.where('primary_cnae_code in = ?', "(#{params[:primary_cnae_code].split(',').join(',')})")
query.where('primary_cnae_code in = ?', "(#{params[:primary_cnae_code].split(',').join()})")
query.where('primary_cnae_code in = ?', "(#{params[:primary_cnae_code].split(',')})")
query.where('primary_cnae_code in = ?', "(#{params[:primary_cnae_code].join(',')})")
c
query.where('primary_cnae_code in = ?', "#{params[:primary_cnae_code].split(',')}")
c
query.where('primary_cnae_code in ?', "#{params[:primary_cnae_code].split(',')}")
c
params[:primary_cnae_code].split(',')
params[:primary_cnae_code]
params[:primary_cnae_code].to_r
params[:primary_cnae_code].to_a
params[:primary_cnae_code].join(', ')
params[:primary_cnae_code].split(', ')
params[:primary_cnae_code].split(", ")
params[:primary_cnae_code].join(", ")
params[:primary_cnae_code].class
params[:primary_cnae_code]
exit
r.id
r
c
r.name_company.gsub(/\d/, '').strip
r.name_company.gsub(/\d/, '')
r.name_company.gsub(/\d/, ' ')
r.name_company.gsub(/\d/,'')
r.name_company.gsub(/\d/, '')
r.name_company.empty?
r.name_company.class
r.name_company
c
where(county_code: county_id)
county_id
exit
c
state.county
state
exit
c
County.find_by_code(r.county_code)
c
County.find_by_code(r.county_code)
r.county_code
c
cc
c
mount_secondary_cnae(r.secondary_cnae_code)
c
result
c
code
RegistrationSituation.all
RegistrationSituation.find_by_code(code)
code
exit
c
code
c
code
c
code
c
code
c
code.nil?
code
exit
c
RegistrationStatus.find_by_code(code)
c
RegistrationStatus.find_by_code(code)
code
c
RegistrationSituation.find_by_code(code).id
c
RegistrationSituation.find_by_code(code)
code
c
params[:end_date].presence
params[:initial_date].presence
params[:end_date].presence
params[:end_date]
date_end = params[:end_date].gsub('-', '').presence || params[:initial_date]
date_end
date_initial
query = query.where(start_date_activity: date_initial..date_end)
date_initial
c
params[:initial_date].gsub('-', '')
params[:initial_date].join('-')
params[:initial_date].split('-')
params[:initial_date].join('-')
params[:initial_date]
c
params_export
params
c
params_export
params
c
export_params
c
params
c
file
c
file
c
filename
c
file = ExportService.export_to_xlsx(params)
params
c
params = params.permit!
params = params.permit
file = ExportService.new(params)
params
export_params
params
c
params
exit
c
re
re.registration_situation
re.registration_situation_code
re.registration_situation
re
c
uf
company_size_code
c
company_size_code.present?
c
company_size_code
c
query = search_uniq(params)
query
c
query.where('LOWER(cnpj) ILIKE ?', "%#{params[:cnpj]}%")
params[:cnpj]
query
c
query = search_uniq(params)
params
c
query.where(primary_cnae_code: params[:primary_cnae_code])
params[:primary_cnae_code].present?
params[:county_code].present?
query
c
params
c
params
c
params
search_uniq_params
c
search_uniq_params
c
County.find_by_code(r.county_code).description
r.county_code
r
c
Cnae.find_by_code(secondary_cnae_code).description
c
Cnae.find_by_code(secondary_cnae_code).description
c
Cnae.find_by_code(secondary_cnae_code).description
c
Cnae.find_by_code(secondary_cnae_code).description
c
Cnae.find_by_code(secondary_cnae_code).description
c
Cnae.find_by_code(secondary_cnae_code).description
c
Cnae.find_by_code(secondary_cnae_code)
c
Cnae.find_by_code(secondary_cnae_code)
c
Cnae.find_by_code(secondary_cnae_code)
c
